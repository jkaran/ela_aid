<Window x:Class="Agent.Interaction.Desktop.SoftPhoneBar"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:CustomControl="clr-namespace:Agent.Interaction.Desktop.CustomControls"
        xmlns:gif="http://wpfanimatedgif.codeplex.com"
        xmlns:local="clr-namespace:Agent.Interaction.Desktop"
        xmlns:convert="clr-namespace:Agent.Interaction.Desktop.Converters"
        xmlns:my="http://schemas.microsoft.com/wpf/2008/toolkit"
        Title="AID" ResizeMode="CanResize" Name="SoftphoneBar"  WindowStyle="None" Icon="/Agent.Interaction.Desktop;component/Images/Agent32x32.ico" 
        Background="Transparent" AllowsTransparency="True" Activated="Window_Activated" Deactivated="Window_Deactivated" 
        StateChanged="Window_StateChanged" Loaded="Window_Loaded" MouseEnter="Window_MouseEnter" WindowStartupLocation="CenterScreen"
        PreviewMouseMove="Window_MouseEnter" Closing="Window_Closing" SizeChanged="SoftphoneBar_SizeChanged" >
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary
                   Source="/Agent.Interaction.Desktop;component/Resources/StylesResourceDictionary.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <convert:ValueConverter x:Key="ValueConverter"></convert:ValueConverter>
            <convert:DGCellForeGroundConverter x:Key="CellForeground"></convert:DGCellForeGroundConverter>
            <convert:DGCellCellMouseOverConverter x:Key="CellMouseOver"/>
            <convert:DGRowBackgroundConverter x:Key="RowBackground"></convert:DGRowBackgroundConverter>
            <convert:DGGlobalStatBackGroundConverter x:Key="GlobalStatBackground"></convert:DGGlobalStatBackGroundConverter>
            <convert:UriUnescapeDataStringConverter x:Key="UriUnescapeDataString"/>
            <RoutedUICommand x:Key="Login"/>
            <RoutedUICommand x:Key="Logout"/>
            <RoutedUICommand x:Key="Ready"/>
            <RoutedUICommand x:Key="NotReady"/>
            <RoutedUICommand x:Key="Answer"/>
            <RoutedUICommand x:Key="Release"/>
            <RoutedUICommand x:Key="Hold"/>
            <RoutedUICommand x:Key="Retrieve"/>
        </ResourceDictionary>
    </Window.Resources>
    <Window.CommandBindings>
        <CommandBinding Command="{StaticResource Login}" Executed="Login_Click" />
        <CommandBinding Command="{StaticResource Logout}" Executed="Logout_Click" />
        <CommandBinding Command="{StaticResource Ready}" Executed="Ready_Click" />
        <CommandBinding Command="{StaticResource NotReady}" Executed="NotReady_Click" />
        <CommandBinding Command="{StaticResource Answer}" Executed="Answer_Click" />
        <CommandBinding Command="{StaticResource Release}" Executed="Release_Click" />
        <CommandBinding Command="{StaticResource Hold}" Executed="Hold_Click" />
        <CommandBinding Command="{StaticResource Retrieve}" Executed="Retrieve_Click" />
    </Window.CommandBindings>
    <Grid>
        <Border Name="MainBorder" BorderBrush="{Binding MainBorderBrush}" Margin="8" BorderThickness="1" Background="White" VirtualizingStackPanel.IsVirtualizing="True"
              VirtualizingStackPanel.VirtualizationMode="Recycling">
            <!--#0070C5-->
            <Grid VirtualizingStackPanel.IsVirtualizing="True"
              VirtualizingStackPanel.VirtualizationMode="Recycling">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="5"/>
                </Grid.RowDefinitions>
                <Rectangle Name="RightSideRect" Grid.RowSpan="2" Fill="Transparent" Width="3" Panel.ZIndex="1000" HorizontalAlignment="Right" VerticalAlignment="Stretch"/>
                <Rectangle Name="RightbottomSideRect" Grid.Row="1" Fill="Transparent" Width="8" Height="5"  Panel.ZIndex="2200" HorizontalAlignment="Right" VerticalAlignment="Bottom"/>
                <Rectangle Name="BottomSideRect" Grid.Row="1" Fill="Transparent" Height="3" Panel.ZIndex="1000" HorizontalAlignment="Stretch" VerticalAlignment="Bottom"/>

                <Grid Background="White" VirtualizingStackPanel.IsVirtualizing="True"
              VirtualizingStackPanel.VirtualizationMode="Recycling">
                    <Grid.RowDefinitions>
                        <RowDefinition Name="grdTitle" Height="Auto"></RowDefinition>
                        <RowDefinition Name="grdTool" Height="Auto"></RowDefinition>
                        <RowDefinition Name="grdBottom" Height="{Binding BottomRowHeight}" />
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="0" Name="TitleGrid">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"></ColumnDefinition>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                            <ColumnDefinition  Width="Auto"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <Border Name="agentStateBorder" Grid.Column="0" Margin="5,0,30,0" MouseEnter="Border_MouseEnter" MouseLeave="Border_MouseLeave" Background="White" Width="26"  MouseLeftButtonUp="btn_LeftSettingButton_Click" MouseRightButtonUp="btn_LeftSettingButton_MouseRightButtonUp">
                            <StackPanel Orientation="Horizontal" MouseEnter="Border_MouseEnter">
                                <Image  Width="15" Height="16" Name="imgSoftIcon" HorizontalAlignment="Left" VerticalAlignment="Top" Source="/Agent.Interaction.Desktop;component/Images/Pointel Softphone.png" MouseEnter="imgSoftIcon_MouseEnter" MouseLeave="imgSoftIcon_MouseLeave"  MouseLeftButtonUp="btn_LeftSettingButton_Click" MouseRightButtonUp="btn_LeftSettingButton_MouseRightButtonUp"></Image>
                                <Image Name="imgStatusOption" Source="/Agent.Interaction.Desktop;component/Images/Eject.png" Width="10" Height="10" VerticalAlignment="Bottom" Visibility="Collapsed"  MouseLeftButtonUp="btn_LeftSettingButton_Click" MouseRightButtonUp="btn_LeftSettingButton_MouseRightButtonUp"></Image>
                            </StackPanel>
                        </Border>
                        <Border Grid.Column="1" Height="18" Background="#007EDF" VerticalAlignment="Top" Margin="0,-1,0,0" MouseLeftButtonDown="MouseLeftButtonDown">
                            <!--for green 4DBF4D  for blue #007edf-->
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <!--<ColumnDefinition/>-->
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid Grid.Column="0"  HorizontalAlignment="Left" Background="{Binding TitleBgColor, TargetNullValue=Transparent}" >
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" Name="lblTitleStatus" FontFamily="Calibri" FontSize="14" Foreground="White" FontWeight="Bold" VerticalAlignment="Stretch" Background="Transparent"
                                Text="{Binding TitleStatusText}"  HorizontalAlignment="Left" MouseLeftButtonDown="MouseLeftButtonDown"></TextBlock>
                                    <TextBlock Grid.Column="1" Name="lbldummy" Width="3" FontFamily="Calibri" FontSize="14" Foreground="White" FontWeight="Bold" VerticalAlignment="Stretch" Background="Transparent"
                                    HorizontalAlignment="Left" ></TextBlock>
                                    <CustomControl:TimerLabel  Grid.Column="2" Margin="0,0,4,0" x:Name="tlblStatus" Text="[00:00:00]" FontFamily="Calibri" FontSize="14" Foreground="White" FontWeight="Bold" HorizontalAlignment="Left" VerticalAlignment="Stretch" Background="Transparent" Width="61" Visibility="{Binding TimerEnabled, FallbackValue=Visible, TargetNullValue=Visible}"></CustomControl:TimerLabel>
                                </Grid>
                                <!--<Border Visibility="{Binding TrialVisibility}" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" Background="#EA3737">
                                <TextBlock Text="{Binding TrailMessage}" FontFamily="Calibri" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="12" Foreground="White" Margin="15,2,10,2"/>
                            </Border>-->
                                <TextBlock Grid.Column="1" Name="txtCallStatus" Margin="-0.3,0,5,0" FontFamily="Calibri" FontSize="14" Foreground="White" FontWeight="Bold" VerticalAlignment="Stretch"
                                     Text="{Binding CallTypeStatus}" HorizontalAlignment="Right" MouseLeftButtonDown="MouseLeftButtonDown"></TextBlock>
                            </Grid>
                        </Border>
                        <StackPanel  Grid.Column="2" Width="60" Height="Auto" HorizontalAlignment="Right" VerticalAlignment="Top" Orientation="Horizontal">
                            <Button Name="btnPin" Height="16" Width="20" Style="{StaticResource PinButton}" Focusable="False" MouseEnter="btnPin_MouseEnter" MouseLeave="btnPin_MouseLeave" Click="btnPin_Click" />
                            <Button Name="btnMinimize" Height="16" Width="20" Style="{StaticResource MinimizeButton}" Focusable="False" Click="btnMinimize_Click" />
                            <Button Name="btnExit" Height="16" Width="20" Style="{StaticResource CloseButton}" Focusable="False" Click="btnExit_Click" />
                        </StackPanel>
                    </Grid>
                    <Grid Grid.Row="1" Margin="0,0,0,3" Height="Auto" Name="ToolGrid" VirtualizingStackPanel.IsVirtualizing="True"
              VirtualizingStackPanel.VirtualizationMode="Recycling">
                        <Grid.Resources>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="FontSize" Value="11" />
                            </Style>
                        </Grid.Resources>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid Grid.Column="0" Name="grdTools_Buttons" MinWidth="550" MaxWidth="750" HorizontalAlignment="Right" SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Button Grid.Column="0" Name="btnLogin" MinWidth="45" MaxWidth="55" Height="55" Margin="5,0,0,0" Focusable="False"  Style="{StaticResource NormalImageButton}" VerticalAlignment="Top" VerticalContentAlignment="Stretch" Click="btnLogin_Click">
                                <!---->
                                <StackPanel Orientation="Vertical" HorizontalAlignment="Center" MinWidth="45" MaxWidth="55">
                                    <Image Source="{Binding LogImageSource}" Width="40" Height="40"></Image>
                                    <TextBlock HorizontalAlignment="Center" TextAlignment="Center"  Text="{Binding LogText}" FontFamily="Calibri" FontSize="11" TextWrapping="Wrap" Margin="2,0,2,0">
                                    </TextBlock>
                                </StackPanel>
                            <!--<Button.Template>
                                <ControlTemplate TargetType="Button">
                                    <ContentPresenter Content="{TemplateBinding Content}" />
                                </ControlTemplate>
                            </Button.Template>-->
                                <Button.ToolTip>
                                    <Border Background="White" BorderBrush="#ADAAAD" BorderThickness="0.5" Margin="-5">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"></RowDefinition>
                                                <RowDefinition Height="*"></RowDefinition>
                                            </Grid.RowDefinitions>
                                            <TextBlock Name="LogHeading" Text="{Binding LogText}" Grid.Row="0" Padding="10,5,10,0" FontWeight="Bold" FontFamily="Calibri" ></TextBlock>
                                            <TextBlock Name="LogContent" Grid.Row="1" Padding="10,2,10,10" TextWrapping="WrapWithOverflow" FontFamily="Calibri" Width="Auto" MaxWidth="200">
                                                <TextBlock.Style>
                                                    <Style TargetType="TextBlock">
                                                        <Style.Triggers>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding LogText}" Value="Login" />
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="TextBlock.Text" Value="Agent login through Voice channel." />
                                                            </MultiDataTrigger>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding LogText}" Value="Logout" />
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="TextBlock.Text" Value="Agent Logout from Voice Channel." />
                                                            </MultiDataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>
                                        </Grid>
                                    </Border>
                                </Button.ToolTip>
                            </Button>
                            <Button Grid.Column="1" Name="btnReady" MinWidth="45" MaxWidth="55" Height="55" Focusable="False" Style="{StaticResource NormalImageButton}" IsEnabled="{Binding IsReadyEnabled}" VerticalAlignment="Top"  VerticalContentAlignment="Stretch" Click="btnReady_Click">
                                <StackPanel Orientation="Vertical" HorizontalAlignment="Center" MinWidth="45" MaxWidth="55">
                                    <Image Source="{Binding ReadyImageSource}" Width="40" Height="40"></Image>
                                    <TextBlock Text="{Binding ReadyText}" HorizontalAlignment="Center" TextAlignment="Center"  FontFamily="Calibri" TextWrapping="Wrap" Margin="2,0,2,0"></TextBlock>
                                </StackPanel>
                                <Button.ToolTip>
                                    <Border Background="White" BorderBrush="#ADAAAD" BorderThickness="0.5" Margin="-5">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"></RowDefinition>
                                                <RowDefinition Height="*"></RowDefinition>
                                            </Grid.RowDefinitions>
                                            <TextBlock Name="ReadyHeading" Text="{Binding ReadyText}" Grid.Row="0" Padding="10,5,10,0" FontWeight="Bold" FontFamily="Calibri" ></TextBlock>
                                            <TextBlock Name="ReadyContent" Grid.Row="1" Padding="10,2,10,10" TextWrapping="WrapWithOverflow" FontFamily="Calibri" Width="Auto" MaxWidth="200">
                                                <TextBlock.Style>
                                                    <Style TargetType="TextBlock">
                                                        <Style.Triggers>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding ReadyText}" Value="Ready" />
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="TextBlock.Text" Value="Agent can change the state to 'Ready'." />
                                                            </MultiDataTrigger>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding ReadyText}" Value="Not Ready" />
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="TextBlock.Text" Value="Agent can change the state to 'NotReady' with reasoncodes." />
                                                            </MultiDataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>
                                        </Grid>
                                    </Border>
                                </Button.ToolTip>
                            </Button>
                            <Button Grid.Column="2" Name="btnAnswer" MinWidth="45" MaxWidth="55" Height="55" Focusable="False" Style="{StaticResource NormalImageButton}" IsEnabled="{Binding IsTalkEnabled}" VerticalAlignment="Top" VerticalContentAlignment="Stretch" Command="{Binding TalkBtnCommand}" Click="btnAnswer_Click">
                                <StackPanel Orientation="Vertical" HorizontalAlignment="Center" MinWidth="45" MaxWidth="55">
                                    <Image gif:ImageBehavior.AnimatedSource="{Binding TalkImageSource}" Width="40" Height="40"></Image>
                                    <TextBlock Text="{Binding TalkText}" HorizontalAlignment="Center" TextAlignment="Center"  FontFamily="Calibri" TextWrapping="Wrap" Margin="2,0,2,0"></TextBlock>
                                </StackPanel>
                                <Button.ToolTip>
                                    <Border Background="White" BorderBrush="#ADAAAD" BorderThickness="0.5" Margin="-5">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"></RowDefinition>
                                                <RowDefinition Height="*"></RowDefinition>
                                            </Grid.RowDefinitions>
                                            <TextBlock Name="TalkHeading" Text="{Binding TalkText}" Grid.Row="0" Padding="10,5,10,0" FontWeight="Bold" FontFamily="Calibri" ></TextBlock>
                                            <TextBlock Name="TalkContent" Grid.Row="1" Padding="10,2,10,10" TextWrapping="WrapWithOverflow" FontFamily="Calibri" Width="Auto" MaxWidth="200">
                                                <TextBlock.Style>
                                                    <Style TargetType="TextBlock">
                                                        <Style.Triggers>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding TalkText}" Value="Talk" />
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="TextBlock.Text" Value="Agent can answer the incoming call." />
                                                            </MultiDataTrigger>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding TalkText}" Value="Release" />
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="TextBlock.Text" Value="Agent can release the current call." />
                                                            </MultiDataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>
                                        </Grid>
                                    </Border>
                                </Button.ToolTip>
                            </Button>
                            <Button Grid.Column="3" Name="btnHold" MinWidth="45" MaxWidth="55" Height="55" Focusable="False"  Style="{StaticResource NormalImageButton}" IsEnabled="{Binding IsHoldEnabled}" VerticalAlignment="Top" VerticalContentAlignment="Stretch" Command="{Binding HoldBtnCommand}" Click="btnHold_Click">
                                <StackPanel Orientation="Vertical" HorizontalAlignment="Center" MinWidth="45" MaxWidth="55">
                                    <Image Source="{Binding HoldImageSource}" Width="40" Height="40"></Image>
                                    <TextBlock Text="{Binding HoldText}" HorizontalAlignment="Center" TextAlignment="Center"  FontFamily="Calibri" TextWrapping="Wrap" Margin="2,0,2,0"></TextBlock>
                                </StackPanel>
                                <Button.ToolTip>
                                    <Border Background="White" BorderBrush="#ADAAAD" BorderThickness="0.5" Margin="-5">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"></RowDefinition>
                                                <RowDefinition Height="*"></RowDefinition>
                                            </Grid.RowDefinitions>
                                            <TextBlock Name="HoldHeading" Text="{Binding HoldText}" Grid.Row="0" Padding="10,5,10,0" FontWeight="Bold" FontFamily="Calibri" ></TextBlock>
                                            <TextBlock Name="HoldContent" Grid.Row="1" Padding="10,2,10,10" TextWrapping="WrapWithOverflow" FontFamily="Calibri" Width="Auto" MaxWidth="200">
                                                <TextBlock.Style>
                                                    <Style TargetType="TextBlock">
                                                        <Style.Triggers>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding HoldText}" Value="Hold" />
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="TextBlock.Text" Value="Agent can put the current call onhold." />
                                                            </MultiDataTrigger>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding HoldText}" Value="Retrieve" />
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="TextBlock.Text" Value="Agent can retrieve the held call." />
                                                            </MultiDataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>
                                        </Grid>
                                    </Border>
                                </Button.ToolTip>
                            </Button>
                            <Button Grid.Column="4" Name="btnTransfer" MinWidth="45" MaxWidth="65" Height="55" Focusable="False"  Style="{StaticResource NormalImageButton}" IsEnabled="{Binding IsTransEnabled}" VerticalAlignment="Top" VerticalContentAlignment="Stretch" Click="btnTransfer_Click">
                                <StackPanel Orientation="Vertical" HorizontalAlignment="Center" MinWidth="45" MaxWidth="65">
                                    <Image Source="{Binding TransImageSource}" Width="40" Height="40"></Image>
                                    <TextBlock Text="{Binding TransText}" HorizontalAlignment="Center" TextAlignment="Center"  FontFamily="Calibri" TextWrapping="Wrap" Margin="2,0,2,0"></TextBlock>
                                </StackPanel>
                                <Button.ToolTip>
                                    <Border Background="White" BorderBrush="#ADAAAD" BorderThickness="0.5" Margin="-5">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"></RowDefinition>
                                                <RowDefinition Height="*"></RowDefinition>
                                            </Grid.RowDefinitions>
                                            <TextBlock Name="TransHeading" Text="{Binding TransText}" Grid.Row="0" Padding="10,5,10,0" FontWeight="Bold" FontFamily="Calibri" ></TextBlock>
                                            <TextBlock Name="TransContent" Grid.Row="1" Padding="10,2,10,10" TextWrapping="WrapWithOverflow" FontFamily="Calibri" Width="Auto" MaxWidth="200">
                                                <TextBlock.Style>
                                                    <Style TargetType="TextBlock">
                                                        <Style.Triggers>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding TransText}" Value="Trans" />
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="TextBlock.Text" Value="Agent can initiate the transfer call to another agent." />
                                                            </MultiDataTrigger>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding TransText}" Value="Comp Trans" />
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="TextBlock.Text" Value="Agent can complete the transfer call." />
                                                            </MultiDataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>
                                        </Grid>
                                    </Border>
                                </Button.ToolTip>
                            </Button>
                            <Button Grid.Column="5" Name="btnConference" MinWidth="45" MaxWidth="65" Height="55" Focusable="False" Style="{StaticResource NormalImageButton}" IsEnabled="{Binding IsConfEnabled}" VerticalAlignment="Top" VerticalContentAlignment="Stretch" Click="btnConference_Click">
                                <StackPanel Orientation="Vertical" HorizontalAlignment="Center" MinWidth="45" MaxWidth="65">
                                    <Image Source="{Binding ConfImageSource}" Width="40" Height="40"></Image>
                                    <TextBlock Text="{Binding ConfText}" HorizontalAlignment="Center" TextAlignment="Center"  FontFamily="Calibri" TextWrapping="Wrap" Margin="2,0,2,0"></TextBlock>
                                </StackPanel>
                                <Button.ToolTip>
                                    <Border Background="White" BorderBrush="#ADAAAD" BorderThickness="0.5" Margin="-5">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"></RowDefinition>
                                                <RowDefinition Height="*"></RowDefinition>
                                            </Grid.RowDefinitions>
                                            <TextBlock Name="ConfHeading" Text="{Binding ConfText}" Grid.Row="0" Padding="10,5,10,0" FontWeight="Bold" FontFamily="Calibri" ></TextBlock>
                                            <TextBlock Name="ConfContent" Grid.Row="1" Padding="10,2,10,10" TextWrapping="WrapWithOverflow" FontFamily="Calibri" Width="Auto" MaxWidth="200">
                                                <TextBlock.Style>
                                                    <Style TargetType="TextBlock">
                                                        <Style.Triggers>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding ConfText}" Value="Conf" />
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="TextBlock.Text" Value="Agent can initiate conference call with another agent." />
                                                            </MultiDataTrigger>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding ConfText}" Value="Comp Conf" />
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="TextBlock.Text" Value="Agent can complete the conference call." />
                                                            </MultiDataTrigger>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding ConfText}" Value="Delete Conf" />
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="TextBlock.Text" Value="Agent can delete the conference call for the specified DN." />
                                                            </MultiDataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>
                                        </Grid>
                                    </Border>
                                </Button.ToolTip>
                            </Button>
                            <Button Grid.Column="6" Name="btnReconnect" MinWidth="45" MaxWidth="55" Height="55" Focusable="False" Style="{StaticResource NormalImageButton}" IsEnabled="{Binding IsReConEnabled}" VerticalAlignment="Top" VerticalContentAlignment="Stretch" Click="btnReconnect_Click">
                                <StackPanel Orientation="Vertical" HorizontalAlignment="Center" MinWidth="45" MaxWidth="55">
                                    <Image Source="{Binding ReConImageSource}" Width="40" Height="40"></Image>
                                    <TextBlock Text="{Binding ReConText}" HorizontalAlignment="Center" TextAlignment="Center"  FontFamily="Calibri" TextWrapping="Wrap" Margin="2,0,2,0"></TextBlock>
                                </StackPanel>
                                <Button.ToolTip>
                                    <Border Background="White" BorderBrush="#ADAAAD" BorderThickness="0.5" Margin="-5">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"></RowDefinition>
                                                <RowDefinition Height="*"></RowDefinition>
                                            </Grid.RowDefinitions>
                                            <TextBlock Name="ReConHeading" Text="{Binding ReConText}" Grid.Row="0" Padding="10,5,10,0" FontWeight="Bold" FontFamily="Calibri" ></TextBlock>
                                            <TextBlock Name="ReConContent" Grid.Row="1" Padding="10,2,10,10" TextWrapping="WrapWithOverflow" FontFamily="Calibri" Width="Auto" MaxWidth="200" Text="Agent can cancel the current Transfer/conference call and re-establish new Transfer/conference call with the agent" />
                                        </Grid>
                                    </Border>
                                </Button.ToolTip>
                            </Button>
                            <Button Grid.Column="7" MinWidth="45" Name="btnAlternateCall" MaxWidth="55" Height="55" Focusable="False" Style="{StaticResource NormalImageButton}" IsEnabled="{Binding IsAlternateCallEnabled}" VerticalAlignment="Top" VerticalContentAlignment="Stretch" Click="btnAlternateCall_Click">
                                <StackPanel Orientation="Vertical" HorizontalAlignment="Center" MinWidth="45" MaxWidth="55">
                                    <Image Source="{Binding AlternateCallImageSource}" Width="40" Height="40"></Image>
                                    <TextBlock Text="{Binding AlternateCallText}" HorizontalAlignment="Center" TextAlignment="Center" FontSize="11"  FontFamily="Calibri" TextWrapping="Wrap" Margin="2,0,2,0"></TextBlock>
                                </StackPanel>
                                <Button.ToolTip>
                                    <Border Background="White" BorderBrush="#ADAAAD" BorderThickness="0.5" Margin="-5">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"></RowDefinition>
                                                <RowDefinition Height="Auto"></RowDefinition>
                                            </Grid.RowDefinitions>
                                            <TextBlock Name="AlternateCallHeading" Text="{Binding AlternateCallText}" Grid.Row="0" Padding="10,5,10,0" FontWeight="Bold" FontFamily="Calibri" ></TextBlock>
                                            <TextBlock Name="AlternateCallContent" Grid.Row="1" Padding="10,2,10,10" TextWrapping="WrapWithOverflow" FontFamily="Calibri" Width="Auto" MaxWidth="200" Text="Agent can make alternate call." />
                                        </Grid>
                                    </Border>
                                </Button.ToolTip>
                            </Button>
                            <Button Grid.Column="8" MinWidth="45" Name="btnMergeCall" MaxWidth="65" Height="55" Focusable="False" Style="{StaticResource NormalImageButton}" IsEnabled="{Binding IsMergeCallEnabled}" VerticalAlignment="Top" VerticalContentAlignment="Stretch" Click="btnMergeCall_Click">
                                <StackPanel Orientation="Vertical" HorizontalAlignment="Center" MinWidth="45" MaxWidth="65">
                                    <Image Source="{Binding MergeCallImageSource}" Width="40" Height="40"></Image>
                                    <TextBlock Text="{Binding MergeCallText}" HorizontalAlignment="Center" TextAlignment="Center" FontSize="11"  FontFamily="Calibri" TextWrapping="Wrap" Margin="2,0,2,0"></TextBlock>
                                </StackPanel>
                                <Button.ToolTip>
                                    <Border Background="White" BorderBrush="#ADAAAD" BorderThickness="0.5" Margin="-5">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"></RowDefinition>
                                                <RowDefinition Height="Auto"></RowDefinition>
                                            </Grid.RowDefinitions>
                                            <TextBlock Name="MergeCallHeading" Text="{Binding MergeCallText}" Grid.Row="0" Padding="10,5,10,0" FontWeight="Bold" FontFamily="Calibri" ></TextBlock>
                                            <TextBlock Name="MergeCallContent" Grid.Row="1" Padding="10,2,10,10" TextWrapping="WrapWithOverflow" FontFamily="Calibri" Width="Auto" MaxWidth="200" Text="Agent can merge all calls." />
                                        </Grid>
                                    </Border>
                                </Button.ToolTip>
                            </Button>
                            <ComboBox Grid.Column="9" Name="txtDN" VerticalAlignment="Top" Margin="5,5,0,5" Height="23" Width="115" IsEditable="True" MaxDropDownHeight="100" FontFamily="Calibri" ItemsSource="{Binding}" SelectionChanged="txtDN_SelectionChanged" TextBoxBase.TextChanged="txtDN_TextChanged" MouseRightButtonUp="txtDN_MouseRightButtonUp" CommandManager.PreviewCanExecute="txtDN_PreviewCanExecute"  PreviewKeyDown="cmshow_KeyDown" MouseDown="txtDN_MouseDown" PreviewMouseLeftButtonDown="txtDN_MouseDown">
                            </ComboBox>
                            <Button Grid.Column="10" Name="btnDial" MinWidth="45" MaxWidth="55" Height="55" Focusable="False" Style="{StaticResource NormalImageButton}" IsEnabled="{Binding IsDialEnabled}" VerticalAlignment="Top" VerticalContentAlignment="Stretch" MouseRightButtonUp="btnDial_MouseRightButtonUp" Click="btnDial_Click">
                                <StackPanel Orientation="Vertical" HorizontalAlignment="Center" MinWidth="45" MaxWidth="55">
                                    <Image Source="{Binding DialImageSource}" Width="40" Height="40"></Image>
                                    <TextBlock Text="{Binding DialText}" HorizontalAlignment="Center" TextAlignment="Center"  FontFamily="Calibri" TextWrapping="Wrap" Margin="2,0,2,0"></TextBlock>
                                </StackPanel>
                                <Button.ToolTip>
                                    <Border Background="White" BorderBrush="#ADAAAD" BorderThickness="0.5" Margin="-5">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"></RowDefinition>
                                                <RowDefinition Height="*"></RowDefinition>
                                            </Grid.RowDefinitions>
                                            <TextBlock Name="DailHeading" Text="{Binding DialText}" Grid.Row="0" Padding="10,5,10,0" FontWeight="Bold" FontFamily="Calibri" ></TextBlock>
                                            <TextBlock Name="DailContent" Grid.Row="1" Text="Make Call to entered number."  Padding="10,2,10,10" TextWrapping="WrapWithOverflow" FontFamily="Calibri" Width="Auto" MaxWidth="200" >
                                                <TextBlock.Style>
                                                    <Style TargetType="TextBlock">
                                                        <Setter Property="TextBlock.Visibility" Value="Collapsed" />
                                                        <Style.Triggers>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding DialText}" Value="Dial" />
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="TextBlock.Visibility" Value="Visible" />
                                                            </MultiDataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>
                                            <TextBlock Name="DailContent1" Text="Send dtmf for entered digit." Grid.Row="1" Padding="10,2,10,10" TextWrapping="WrapWithOverflow" FontFamily="Calibri" Width="Auto" MaxWidth="200" >
                                                <TextBlock.Style>
                                                    <Style TargetType="TextBlock">
                                                        <Setter Property="TextBlock.Visibility" Value="Collapsed" />
                                                        <Style.Triggers>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding DialText}" Value="DTMF" />
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="TextBlock.Visibility" Value="Visible" />
                                                            </MultiDataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>
                                        </Grid>
                                    </Border>
                                </Button.ToolTip>
                            </Button>
                            <Button Grid.Column="11" MinWidth="45" Name="btnCallData" MaxWidth="55" Height="55" Focusable="False" Style="{StaticResource NormalImageButton}" IsEnabled="{Binding IsAttachDataEnabled}" VerticalAlignment="Top" VerticalContentAlignment="Stretch" Command="{Binding AttachDataBtnCommand}" Click="btnCallData_Click">
                                <StackPanel Orientation="Vertical" HorizontalAlignment="Center" MinWidth="45" MaxWidth="55">
                                    <Image Source="{Binding AttachDataImageSource}" Width="40" Height="40"></Image>
                                    <TextBlock Text="{Binding AttachDataText}" HorizontalAlignment="Center" TextAlignment="Center" FontSize="11"  FontFamily="Calibri" TextWrapping="Wrap" Margin="2,0,2,0"></TextBlock>
                                </StackPanel>
                                <Button.ToolTip>
                                    <Border Background="White" BorderBrush="#ADAAAD" BorderThickness="0.5" Margin="-5">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"></RowDefinition>
                                                <RowDefinition Height="Auto"></RowDefinition>
                                            </Grid.RowDefinitions>
                                            <TextBlock Name="AttachDataHeading" Text="{Binding AttachDataText}" Grid.Row="0" Padding="10,5,10,0" FontWeight="Bold" FontFamily="Calibri" ></TextBlock>
                                            <TextBlock Name="AttachDataContent" Grid.Row="1" Padding="10,2,10,10" TextWrapping="WrapWithOverflow" FontFamily="Calibri" Width="Auto" MaxWidth="200" Text="Show current call data." />
                                        </Grid>
                                    </Border>
                                </Button.ToolTip>
                            </Button>
                            <Button Grid.Column="12" MinWidth="45" MaxWidth="75" Height="55" Focusable="False" Style="{StaticResource NormalImageButton}"
                                    VerticalAlignment="Top" VerticalContentAlignment="Stretch" Click="btn_Salesforce_Click" Visibility="{Binding IsSalesForceEnabled}">
                                <StackPanel Orientation="Vertical" HorizontalAlignment="Center" MinWidth="45" MaxWidth="75">
                                    <Image Source="/Agent.Interaction.Desktop;component/Images/Salseforce.png" Width="50" Height="40"></Image>
                                    <TextBlock Text="{Binding SalesForceText, TargetNullValue=DisConnected}" HorizontalAlignment="Center" TextAlignment="Center" FontSize="11"  FontFamily="Calibri" TextWrapping="Wrap" Margin="2,0,2,0"></TextBlock>
                                </StackPanel>
                                <Button.ToolTip>
                                    <Border Background="White" BorderBrush="#ADAAAD" BorderThickness="0.5" Margin="-5">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"></RowDefinition>
                                                <RowDefinition Height="Auto"></RowDefinition>
                                            </Grid.RowDefinitions>
                                            <TextBlock  Text="{Binding SalesForceText, TargetNullValue=DisConnected}" Grid.Row="0" Padding="10,5,10,0" FontWeight="Bold" FontFamily="Calibri" ></TextBlock>
                                            <TextBlock  Grid.Row="1" Padding="10,2,10,10" TextWrapping="WrapWithOverflow" FontFamily="Calibri" Width="Auto" MaxWidth="200" Text="{Binding SalesForceTextToolTip, TargetNullValue='SalesForce is dis-connected with Agent Interaction Desktop'}" />
                                        </Grid>
                                    </Border>
                                </Button.ToolTip>
                            </Button>
                        </Grid>
                        <Button Style="{StaticResource NormalImageButton}" Height="40" Width="50" Margin="10,0,10,0" Focusable="False" Grid.Column="1"
                            VerticalAlignment="Center" HorizontalAlignment="Right" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Name="btn_Menu" Click="btn_Menu_Click">
                            <Button.ToolTip>
                                <Border Background="White" BorderBrush="#ADAAAD" BorderThickness="0.5" Margin="-5">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"></RowDefinition>
                                            <RowDefinition Height="*"></RowDefinition>
                                        </Grid.RowDefinitions>
                                        <TextBlock Text="Utilities" Grid.Row="0" Padding="10,5,10,0" FontWeight="Bold" FontFamily="Calibri" />
                                        <TextBlock Grid.Row="1" Text="Access and use workspace supporting views" Padding="10,2,10,10" TextWrapping="WrapWithOverflow" FontFamily="Calibri" Width="Auto" MaxWidth="200"/>
                                    </Grid>
                                </Border>

                            </Button.ToolTip>
                            <Image Height="30" Width="30" Source="/Agent.Interaction.Desktop;component/Images/Menu.png"/>
                        </Button>
                        <Grid Name="grdNotify" MouseLeftButtonUp="grdNotify_MouseLeftButtonUp" Width="20" Height="20"  Grid.Column="1" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,16,9" Panel.ZIndex="10000">
                            <Grid.ToolTip>
                                <Border Background="White" BorderBrush="#ADAAAD" BorderThickness="0.5" Margin="-5">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"></RowDefinition>
                                            <RowDefinition Height="*"></RowDefinition>
                                        </Grid.RowDefinitions>
                                        <TextBlock Text="Unread message" Grid.Row="0" Padding="10,5,10,0" FontWeight="Bold" FontFamily="Calibri" />
                                        <TextBlock Grid.Row="1" Text="You have some unread message in My Message tab." Padding="10,2,10,10" TextWrapping="WrapWithOverflow" FontFamily="Calibri" Width="Auto" MaxWidth="200"/>
                                    </Grid>
                                </Border>

                            </Grid.ToolTip>
                            <Ellipse Fill="Red" Stroke="Red" StrokeThickness="3" Width="16" Height="16" />
                            <WrapPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center">
                                <TextBlock Name="txtUnreadmessageCount" Text="{Binding UnreadMessageCount}" Tag="{Binding MessageCountRange}" FontStretch ="UltraCondensed" FontWeight="Bold" Foreground="White" HorizontalAlignment="Left" TextAlignment="Center" VerticalAlignment="Center"/>
                                <TextBlock Text="+" Width="7" Margin="-0.7" FontStretch="UltraCondensed" FontWeight="ExtraBold" Foreground="White" HorizontalAlignment="Right" TextAlignment="Left" VerticalAlignment="Center">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding MessageCountRange}" Value="0">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding MessageCountRange}" Value="1">
                                                    <Setter Property="Visibility" Value="Visible" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </WrapPanel>
                            <Grid.Style>
                                <Style TargetType="Grid">
                                    <Setter Property="Visibility" Value="Visible" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding MessageCountRange}" Value="-1">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Grid.Style>
                        </Grid>
                    </Grid>
                    <Grid Name="BottomWindowGrid" Grid.Row="2" VirtualizingStackPanel.IsVirtualizing="True"
              VirtualizingStackPanel.VirtualizationMode="Recycling">
                        <TabControl Visibility="{Binding WorksapceTabVisibility}" SelectedIndex="{Binding TabSelectedIndex}" TabStripPlacement="Bottom"
                                    Name="DataTabControl" Height="Auto" Margin="5,5,5,0" SelectionChanged="DataTabControl_SelectionChanged"
                                    VirtualizingStackPanel.IsVirtualizing="True"
              VirtualizingStackPanel.VirtualizationMode="Recycling" >
                            <TabItem Header="My _Channels" VirtualizingStackPanel.IsVirtualizing="True"
              VirtualizingStackPanel.VirtualizationMode="Recycling">
                                <my:DataGrid RowHeaderWidth="0" Margin="5" Background="White" HorizontalAlignment="Stretch" Name="DGMyChannels"
                    VerticalAlignment="Stretch" HorizontalContentAlignment="Left" HorizontalGridLinesBrush="#D6D7D6"
                     VerticalGridLinesBrush="#D6D7D6" AutoGenerateColumns="False" CanUserAddRows="False"
                        CanUserDeleteRows="False" CanUserSortColumns="False" ItemsSource="{Binding MediaStatus}" LoadingRow="DGMyChannels_LoadingRow" 
                                             VirtualizingStackPanel.IsVirtualizing="True"
              VirtualizingStackPanel.VirtualizationMode="Recycling">
                                    <my:DataGrid.Columns>
                                        <my:DataGridTemplateColumn  Header="Media" Width="130" MinWidth="115" MaxWidth="125" CanUserSort="False" SortMemberPath="ChannelName">
                                            <my:DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <StackPanel Orientation="Horizontal">
                                                        <!--<StackPanel.Resources>
                                                <Style TargetType="TextBlock">
                                                    <EventSetter Event="MouseRightButtonDown" Handler="txtblock_MouseRightButtonDown" />
                                                </Style>
                                            </StackPanel.Resources>-->
                                                        <Image Name="imgChannelIcon" Height="15" Width="15" Margin="5,0,5,0"  Source="{Binding ChannelIconImageSource}" />
                                                        <TextBlock HorizontalAlignment="Left" Name="txtChannelName" Text="{Binding ChannelName}" Margin="2,0,0,0" VerticalAlignment="Center" ContextMenuService.IsEnabled="True" />
                                                    </StackPanel>
                                                </DataTemplate>
                                            </my:DataGridTemplateColumn.CellTemplate>
                                            <my:DataGridTemplateColumn.CellStyle>
                                                <Style TargetType="{x:Type my:DataGridCell}">
                                                    <EventSetter Event="MouseRightButtonDown" Handler="txtblock_MouseRightButtonDown" />
                                                    <Setter Property="BorderThickness" Value="0" />
                                                    <Style.Triggers>
                                                        <Trigger Property="IsSelected" Value="True">
                                                            <Setter Property="Background" Value="{StaticResource HighlightedBrush}" />
                                                            <Setter Property="Foreground" Value="Black" />
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </my:DataGridTemplateColumn.CellStyle>
                                        </my:DataGridTemplateColumn>
                                        <my:DataGridTemplateColumn Header="Status" Width="Auto" MinWidth="120" CanUserSort="False" SortMemberPath="ChannelState" IsReadOnly="True">
                                            <my:DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="Auto"></ColumnDefinition>
                                                            <ColumnDefinition Width="Auto"></ColumnDefinition>
                                                            <ColumnDefinition Width="*"></ColumnDefinition>
                                                        </Grid.ColumnDefinitions>
                                                        <Image Grid.Column="0" HorizontalAlignment="Left" Name="imgChannelStateIcon" Margin="5,2,5,2" Height="10" Width="10" Source="{Binding ChannelStateImageSource}" />
                                                        <TextBlock Grid.Column="1" HorizontalAlignment="Left" Name="txtChannelState" Text="{Binding ChannelState}" Margin="2,0,0,0" VerticalAlignment="Center" ContextMenuService.IsEnabled="True" />
                                                        <Grid Grid.Column="2" Visibility="{Binding Path=DataContext.TimerEnabled, ElementName=DGMyChannels, FallbackValue=Visible, TargetNullValue=Visible}">
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="Auto"/>
                                                                <ColumnDefinition Width="Auto"/>
                                                            </Grid.ColumnDefinitions>
                                                            <CustomControl:TimerLabel Margin="0,0,5,0"  HorizontalAlignment="Right" x:Name="CustomTimer" Text="{Binding ChannelInitialTime}" VerticalAlignment="Center" Visibility="{Binding StateTimer}" />
                                                            <TextBlock Name="lblOnCallState" Margin="0,0,5,0" Grid.Column="1" HorizontalAlignment="Right" Text="[Pending]" VerticalAlignment="Center">
                                                                <TextBlock.Style>
                                                                    <Style TargetType="{x:Type TextBlock}">
                                                                        <Style.Triggers>

                                                                            <DataTrigger Binding="{Binding Path=StateTimer}" Value="Collapsed">
                                                                                <Setter Property="Visibility" Value="Visible"/>
                                                                            </DataTrigger>
                                                                            <DataTrigger Binding="{Binding Path=StateTimer}" Value="Visible">
                                                                                <Setter Property="Visibility" Value="Collapsed"/>
                                                                            </DataTrigger>
                                                                        </Style.Triggers>
                                                                    </Style>
                                                                </TextBlock.Style>
                                                            </TextBlock>
                                                        </Grid>
                                                    </Grid>
                                                </DataTemplate>
                                            </my:DataGridTemplateColumn.CellTemplate>
                                            <my:DataGridTemplateColumn.CellStyle>
                                                <Style TargetType="{x:Type my:DataGridCell}">
                                                    <EventSetter Event="MouseRightButtonDown" Handler="txtblock_MouseRightButtonDown" />
                                                    <Setter Property="BorderThickness" Value="0" />
                                                    <Style.Triggers>
                                                        <Trigger Property="IsSelected" Value="True">
                                                            <Setter Property="Background" Value="{StaticResource HighlightedBrush}" />
                                                            <Setter Property="Foreground" Value="Black" />
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </my:DataGridTemplateColumn.CellStyle>
                                        </my:DataGridTemplateColumn>
                                        <my:DataGridTemplateColumn Header="Forward" Width="*" MinWidth="120" CanUserSort="False" SortMemberPath="Forward">
                                            <my:DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBlock Margin="5,0,5,0" HorizontalAlignment="Left" VerticalAlignment="Center" Name="txtForward" Text="{Binding Forward}">
                                                    </TextBlock>
                                                </DataTemplate>
                                            </my:DataGridTemplateColumn.CellTemplate>
                                            <my:DataGridTemplateColumn.CellStyle>
                                                <Style TargetType="{x:Type my:DataGridCell}">
                                                    <EventSetter Event="MouseRightButtonDown" Handler="txtblock_MouseRightButtonDown" />
                                                    <Setter Property="BorderThickness" Value="0" />
                                                    <Style.Triggers>
                                                        <Trigger Property="IsSelected" Value="True">
                                                            <Setter Property="Background" Value="{StaticResource HighlightedBrush}" />
                                                            <Setter Property="Foreground" Value="Black" />
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </my:DataGridTemplateColumn.CellStyle>
                                        </my:DataGridTemplateColumn>
                                        <!--<my:DataGridTemplateColumn Header="Information" Width="*" MinWidth="120" CanUserSort="False">
                                            <my:DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBlock HorizontalAlignment="Left" Name="txtInfo" VerticalAlignment="Center" Text="{Binding Information}" ContextMenuService.ShowOnDisabled="True" />
                                                </DataTemplate>
                                            </my:DataGridTemplateColumn.CellTemplate>
                                            <my:DataGridTemplateColumn.CellStyle>
                                                <Style TargetType="{x:Type my:DataGridCell}">
                                                    <Setter Property="BorderThickness" Value="0" />
                                                    <Style.Triggers>
                                                        <Trigger Property="IsSelected" Value="True">
                                                            <Setter Property="Background" Value="{StaticResource HighlightedBrush}" />
                                                            <Setter Property="Foreground" Value="Black" />
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </my:DataGridTemplateColumn.CellStyle>
                                        </my:DataGridTemplateColumn>-->
                                    </my:DataGrid.Columns>
                                    <my:DataGrid.RowStyle>
                                        <Style TargetType="my:DataGridRow">
                                            <Style.Triggers>
                                                <Trigger Property="IsSelected" Value="True">
                                                    <Setter Property="Background" Value="{StaticResource HighlightedBrush}" />
                                                    <Setter Property="Foreground" Value="Black" />
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </my:DataGrid.RowStyle>
                                    <my:DataGrid.CellStyle>
                                        <Style TargetType="my:DataGridCell">
                                            <Setter Property="Margin" Value="2" />
                                        </Style>
                                    </my:DataGrid.CellStyle>
                                </my:DataGrid>
                            </TabItem>

                            <TabItem Visibility="{Binding StatisticsTabVisibility}" Name="MyStatistics" Header="My _Statistics" VirtualizingStackPanel.IsVirtualizing="True"
              VirtualizingStackPanel.VirtualizationMode="Recycling">
                                <my:DataGrid RowHeaderWidth="0" Margin="5" Background="White" HorizontalAlignment="Stretch" Name="DGMyStatistics"
                    VerticalAlignment="Stretch" HorizontalContentAlignment="Left" HorizontalGridLinesBrush="#D6D7D6"
                     VerticalGridLinesBrush="#D6D7D6"  AutoGenerateColumns="False" CanUserAddRows="False"
                        CanUserDeleteRows="False" CanUserSortColumns="True" ItemsSource="{Binding MyStatistics}"
                                                 VirtualizingStackPanel.IsVirtualizing="True"
              VirtualizingStackPanel.VirtualizationMode="Recycling">
                                    <my:DataGrid.Columns>
                                        <my:DataGridTemplateColumn Header="Key Performance Indicator" Width="*" MinWidth="200" CanUserSort="True" SortMemberPath="StatisticName">
                                            <my:DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBlock HorizontalAlignment="Left" Text="{Binding StatisticName}" Name="txtKPIName" Margin="2,0,0,0" ContextMenuService.ShowOnDisabled="True">
                                                <!--<TextBlock.Style>
                                                    <Style TargetType="TextBlock">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding StatisticName}" Value="NREADY">
                                                                <Setter Property="Text" Value="Display Total Agent Not Ready Time" />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding StatisticName}" Value="LOGIN">
                                                                <Setter Property="Text" Value="Display Total Agent Login Time" />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding StatisticName}" Value="TotalNumberConsultCalls">
                                                                <Setter Property="Text" Value="Display Total Number Of Consult Calls" />
                                                            </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                </TextBlock.Style>-->
                                                    </TextBlock>
                                                </DataTemplate>
                                            </my:DataGridTemplateColumn.CellTemplate>
                                        </my:DataGridTemplateColumn>
                                        <my:DataGridTemplateColumn Header="Value" Width="*" MinWidth="200" CanUserSort="False">
                                            <my:DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBlock HorizontalAlignment="Left" Name="txtKPIName" Text="{Binding StatisticValue}" Foreground="{Binding ThresoldColor}" Margin="2,0,0,0" ContextMenuService.ShowOnDisabled="True" />
                                                </DataTemplate>
                                            </my:DataGridTemplateColumn.CellTemplate>
                                        </my:DataGridTemplateColumn>
                                    </my:DataGrid.Columns>
                                    <my:DataGrid.RowStyle>
                                        <Style TargetType="my:DataGridRow">
                                            <Setter Property="Background" Value="{Binding StatisticType, Converter={StaticResource RowBackground}}" />
                                            <Style.Triggers>
                                                <Trigger Property="IsSelected" Value="True">
                                                    <Setter Property="Background" Value="{StaticResource HighlightedBrush}" />
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </my:DataGrid.RowStyle>
                                </my:DataGrid>
                            </TabItem>

                            <TabItem Visibility="{Binding StatisticsTabVisibility}" Name="ContactStatistics" Header="Con_tact Center Statistics" VirtualizingStackPanel.IsVirtualizing="True"
              VirtualizingStackPanel.VirtualizationMode="Recycling">
                                <my:DataGrid RowHeaderWidth="0" Margin="5" Background="White" HorizontalAlignment="Stretch" Name="DGContactCenterStatistics"
                    VerticalAlignment="Stretch" HorizontalContentAlignment="Left" HorizontalGridLinesBrush="#D6D7D6"
                     VerticalGridLinesBrush="#D6D7D6"  AutoGenerateColumns="False" CanUserSortColumns="True" CanUserAddRows="False"
                        CanUserDeleteRows="False" ItemsSource="{Binding ContactCenterStatistics}" VirtualizingStackPanel.IsVirtualizing="True"
              VirtualizingStackPanel.VirtualizationMode="Recycling">
                                    <my:DataGrid.Columns>
                                        <my:DataGridTemplateColumn Width="*" MinWidth="200" Header="Contact Center Resource" CanUserSort="True" SortMemberPath="ContactStatisticName">
                                            <my:DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBlock HorizontalAlignment="Left" Text="{Binding ContactStatisticName}"  Name="txCCRName" Margin="2,0,0,0" ContextMenuService.ShowOnDisabled="True">
                                                    </TextBlock>
                                                </DataTemplate>
                                            </my:DataGridTemplateColumn.CellTemplate>
                                        </my:DataGridTemplateColumn>
                                        <my:DataGridTemplateColumn Width="*" MinWidth="200" Header="Description" CanUserSort="True">
                                            <my:DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBlock HorizontalAlignment="Left" Text="{Binding ContactStatisticDesc}"  Name="txCCRDesc" Margin="2,0,0,0" ContextMenuService.ShowOnDisabled="True">
                                                    </TextBlock>
                                                </DataTemplate>
                                            </my:DataGridTemplateColumn.CellTemplate>
                                        </my:DataGridTemplateColumn>
                                        <my:DataGridTemplateColumn Width="*" MinWidth="200" Header="Value" CanUserSort="False">
                                            <my:DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBlock HorizontalAlignment="Left" Name="txtKPIName" Text="{Binding ContactStatisticValue}" Foreground="{Binding ContactThresoldColor}" Margin="2,0,0,0" ContextMenuService.ShowOnDisabled="True" />
                                                </DataTemplate>
                                            </my:DataGridTemplateColumn.CellTemplate>
                                        </my:DataGridTemplateColumn>
                                    </my:DataGrid.Columns>
                                    <!--<my:DataGrid.RowStyle>
                                        <Style TargetType="my:DataGridRow">
                                            <Style.Triggers>
                                                <Trigger Property="IsSelected" Value="True">
                                                    <Setter Property="Background" Value="{StaticResource HighlightedBrush}" />
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </my:DataGrid.RowStyle>-->
                                    <my:DataGrid.RowStyle>
                                        <Style TargetType="my:DataGridRow">
                                            <Setter Property="Background">
                                                <Setter.Value>
                                                    <MultiBinding Converter="{StaticResource GlobalStatBackground}">
                                                        <Binding Path="ContactStatisticType" />
                                                        <Binding Path="ContactStatisticName" />
                                                    </MultiBinding>
                                                </Setter.Value>
                                            </Setter>
                                            <Style.Triggers>
                                                <Trigger Property="IsSelected" Value="True">
                                                    <Setter Property="Background" Value="{StaticResource HighlightedBrush}" />
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </my:DataGrid.RowStyle>
                                </my:DataGrid>
                            </TabItem>

                            <TabItem Header="My _Campaigns" Name="TabMyCampaigns">
                                <Grid Name="CampaignTabGrid">
                                </Grid>
                            </TabItem>

                            <TabItem Header="My _History" Name="TabHistory">
                                <Grid Name="HistoryTabGrid">
                                </Grid>
                            </TabItem>

                            <TabItem  Visibility="{Binding SkillsTabVisibility}" Name="TabMySkills" Header="My S_kills" >
                                <Grid>
                                    <my:DataGrid RowHeaderWidth="0" Margin="5" Background="White" HorizontalAlignment="Stretch" Name="DGSkills"
                                VerticalAlignment="Stretch" HorizontalContentAlignment="Left" HorizontalGridLinesBrush="#D6D7D6" HeadersVisibility="Column"
                                VerticalGridLinesBrush="#D6D7D6"  AutoGenerateColumns="False" CanUserSortColumns="True" SelectionMode="Single" SelectionUnit="FullRow"
                                CanUserAddRows="False" CanUserDeleteRows="False" ItemsSource="{Binding MySkills}" VirtualizingStackPanel.IsVirtualizing="True"
              VirtualizingStackPanel.VirtualizationMode="Recycling">
                                        <my:DataGrid.Resources>
                                            <Style TargetType="{x:Type my:DataGrid}">
                                                <Setter Property="Background" Value="White" />
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type my:DataGrid}">
                                                            <Border Background="{TemplateBinding Background}"
      BorderBrush="{TemplateBinding BorderBrush}"
      BorderThickness="{TemplateBinding BorderThickness}"
      SnapsToDevicePixels="True"
      Padding="{TemplateBinding Padding}">
                                                                <ScrollViewer   Focusable="false"
                Name="DG_ScrollViewer"  ContextMenu="{Binding SkillsContextMenu}" ContextMenuOpening="DG_ScrollViewer_ContextMenuOpening">
                                                                    <ScrollViewer.Template>
                                                                        <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                                                            <Grid>
                                                                                <Grid.RowDefinitions>
                                                                                    <RowDefinition Height="Auto" />
                                                                                    <RowDefinition Height="*" />
                                                                                    <RowDefinition Height="Auto" />
                                                                                </Grid.RowDefinitions>

                                                                                <Grid.ColumnDefinitions>
                                                                                    <ColumnDefinition Width="Auto" />
                                                                                    <ColumnDefinition Width="*" />
                                                                                    <ColumnDefinition Width="Auto" />
                                                                                </Grid.ColumnDefinitions>

                                                                                <Button Command="{x:Static my:DataGrid.SelectAllCommand}"
                                Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type my:DataGrid}}, Path=CellsPanelHorizontalOffset}"
                                Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type my:DataGrid}, ResourceId=DataGridSelectAllButtonStyle}}"
                                Focusable="false"
                                Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type my:DataGrid}}, Path=HeadersVisibility, Converter={x:Static my:DataGrid.HeadersVisibilityConverter}, ConverterParameter={x:Static my:DataGridHeadersVisibility.All}}" />
                                                                                <my:DataGridColumnHeadersPresenter Grid.Column="1"
                                           Name="PART_ColumnHeadersPresenter"
                                           Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type my:DataGrid}}, Path=HeadersVisibility, Converter={x:Static my:DataGrid.HeadersVisibilityConverter}, ConverterParameter={x:Static my:DataGridHeadersVisibility.Column}}" />

                                                                                <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" Grid.Row="1" Grid.ColumnSpan="2" CanContentScroll="{TemplateBinding CanContentScroll}" />

                                                                                <ScrollBar Grid.Row="1" Grid.Column="1" Name="PART_VerticalScrollBar"
                                 Orientation="Vertical" HorizontalAlignment="Right" Margin="0,0,0,0" SnapsToDevicePixels="True" OverridesDefaultStyle="True"
                                 Maximum="{TemplateBinding ScrollableHeight}"
                                 ViewportSize="{TemplateBinding ViewportHeight}"
                                 Value="{Binding Path=VerticalOffset, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                 Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}">
                                                                                    <ScrollBar.Style>
                                                                                        <Style TargetType="{x:Type ScrollBar}">
                                                                                            <Setter Property="SnapsToDevicePixels" Value="True" />
                                                                                            <Setter Property="OverridesDefaultStyle" Value="true" />
                                                                                            <Style.Triggers>
                                                                                                <Trigger Property="Orientation" Value="Vertical">
                                                                                                    <Setter Property="Width" Value="18" />
                                                                                                    <Setter Property="Height" Value="Auto" />
                                                                                                    <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
                                                                                                </Trigger>
                                                                                            </Style.Triggers>
                                                                                        </Style>
                                                                                    </ScrollBar.Style>
                                                                                </ScrollBar>

                                                                                <Grid Grid.Row="2" Grid.Column="1">
                                                                                    <Grid.ColumnDefinitions>
                                                                                        <ColumnDefinition Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type my:DataGrid}}, Path=NonFrozenColumnsViewportHorizontalOffset}" />
                                                                                        <ColumnDefinition Width="*" />
                                                                                    </Grid.ColumnDefinitions>
                                                                                    <ScrollBar Grid.Column="1"
                                       Name="PART_HorizontalScrollBar"
                                       Orientation="Horizontal"
                                       Maximum="{TemplateBinding ScrollableWidth}"
                                       ViewportSize="{TemplateBinding ViewportWidth}"
                                       Value="{Binding Path=HorizontalOffset, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                       Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}">
                                                                                        <ScrollBar.Style>
                                                                                            <Style TargetType="{x:Type ScrollBar}">
                                                                                                <Setter Property="SnapsToDevicePixels" Value="True" />
                                                                                                <Setter Property="OverridesDefaultStyle" Value="true" />
                                                                                                <Style.Triggers>
                                                                                                    <Trigger Property="Orientation" Value="Horizontal">
                                                                                                        <Setter Property="Width" Value="Auto" />
                                                                                                        <Setter Property="Height" Value="18" />
                                                                                                        <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />
                                                                                                    </Trigger>
                                                                                                </Style.Triggers>
                                                                                            </Style>
                                                                                        </ScrollBar.Style>
                                                                                    </ScrollBar>
                                                                                </Grid>
                                                                            </Grid>
                                                                        </ControlTemplate>
                                                                    </ScrollViewer.Template>
                                                                    <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                                </ScrollViewer>
                                                            </Border>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </my:DataGrid.Resources>
                                        <my:DataGrid.Columns>
                                            <my:DataGridTemplateColumn Width="*" MinWidth="200" Header="Name" ContextMenuService.IsEnabled="True" CanUserSort="True" SortMemberPath="SkillName">
                                                <my:DataGridTemplateColumn.CellStyle>
                                                    <Style TargetType="{x:Type my:DataGridCell}">
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type my:DataGridCell}">
                                                                    <Grid Background="{TemplateBinding Background}">
                                                                        <ContentPresenter VerticalAlignment="Center" />
                                                                    </Grid>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <EventSetter Event="MouseRightButtonDown" Handler="skills_PreviewMouseRightButtonDown" />
                                                        <Setter Property="BorderThickness" Value="0" />
                                                        <Style.Triggers>
                                                            <Trigger Property="IsSelected" Value="True">
                                                                <Setter Property="Background" Value="{StaticResource HighlightedBrush}" />
                                                                <Setter Property="Foreground" Value="Black" />
                                                            </Trigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </my:DataGridTemplateColumn.CellStyle>
                                                <my:DataGridTemplateColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <TextBlock HorizontalAlignment="Left" Text="{Binding SkillName}"  Name="txtSkillName" Margin="2,0,0,0">
                                                        </TextBlock>
                                                    </DataTemplate>
                                                </my:DataGridTemplateColumn.CellTemplate>
                                            </my:DataGridTemplateColumn>
                                            <my:DataGridTemplateColumn Width="*" MinWidth="200" Header="Level" CanUserSort="True">
                                                <my:DataGridTemplateColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <TextBlock HorizontalAlignment="Left" Text="{Binding SkillLevel}"  Name="txtSkillLevel" Margin="2,0,0,0" ContextMenuService.ShowOnDisabled="True">
                                                        </TextBlock>
                                                    </DataTemplate>
                                                </my:DataGridTemplateColumn.CellTemplate>
                                                <my:DataGridTemplateColumn.CellStyle>
                                                    <Style TargetType="{x:Type my:DataGridCell}">
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type my:DataGridCell}">
                                                                    <Grid Background="{TemplateBinding Background}">
                                                                        <ContentPresenter VerticalAlignment="Center" />
                                                                    </Grid>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <EventSetter Event="MouseRightButtonDown" Handler="skills_PreviewMouseRightButtonDown" />
                                                        <Setter Property="BorderThickness" Value="0" />
                                                        <Style.Triggers>
                                                            <Trigger Property="IsSelected" Value="True">
                                                                <Setter Property="Background" Value="{StaticResource HighlightedBrush}" />
                                                                <Setter Property="Foreground" Value="Black" />
                                                            </Trigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </my:DataGridTemplateColumn.CellStyle>
                                            </my:DataGridTemplateColumn>
                                        </my:DataGrid.Columns>
                                        <my:DataGrid.RowStyle>
                                            <!--<Style TargetType="{x:Type my:DataGridCell}">-->

                                            <!--<Style.Triggers>
                                                <Trigger Property="IsSelected" Value="True">
                                                    <Setter Property="Background" Value="{StaticResource HighlightedBrush}" />
                                                    <Setter Property="Foreground" Value="Black" />
                                                </Trigger>
                                            </Style.Triggers>-->
                                            <!--</Style>-->
                                            <Style TargetType="my:DataGridRow">
                                                <!--<EventSetter Event="MouseRightButtonDown" Handler="skills_PreviewMouseRightButtonDown" />-->
                                                <Setter Property="BorderThickness" Value="0" />
                                                <Setter Property="Height" Value="20" />
                                                <Style.Triggers>
                                                    <Trigger Property="IsSelected" Value="True">
                                                        <Setter Property="Background" Value="{StaticResource HighlightedBrush}" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </my:DataGrid.RowStyle>
                                    </my:DataGrid>
                                </Grid>
                            </TabItem>

                            <TabItem Name="TabWorkbin"  Header="My Work_bin" VirtualizingStackPanel.IsVirtualizing="True"
              VirtualizingStackPanel.VirtualizationMode="Recycling" >
                                <DockPanel Name="dockWorkbin" SizeChanged="dockWorkbin_SizeChanged" VirtualizingStackPanel.IsVirtualizing="True"
              VirtualizingStackPanel.VirtualizationMode="Recycling">
                                </DockPanel>
                            </TabItem>

                            <TabItem Visibility="{Binding A_DataTabVisibility}" Name="calldata" Header="_Interaction Data" VirtualizingStackPanel.IsVirtualizing="True"
              VirtualizingStackPanel.VirtualizationMode="Recycling">
                                <TabControl Name="tb_CallData" Margin="5" VirtualizingStackPanel.IsVirtualizing="True"
              VirtualizingStackPanel.VirtualizationMode="Recycling" SelectionChanged="CallData_SelectionChanged">
                                    <!--Template="{StaticResource ScrollableTabControlTemplate}"-->
                                    <TabItem Name="Interactiondata" Header="Interaction Data">
                                        <Grid Name="grdInteractionData" >
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition />
                                            </Grid.RowDefinitions>
                                            <Grid Panel.ZIndex="1000" HorizontalAlignment="Right" VerticalAlignment="Top" Grid.Row="0">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition/>
                                                    <ColumnDefinition/>
                                                    <ColumnDefinition/>
                                                </Grid.ColumnDefinitions>
                                                <Button Grid.Column="0" Name="btnHimss" Focusable="False" Click="Himss_Click" Style="{StaticResource NormalImageButton}" Margin="0,4,5,0" Visibility="{Binding IsShowMIDPushButton, TargetNullValue=Collapsed, FallbackValue=Collapsed}">
                                                    <StackPanel Orientation="Vertical" HorizontalAlignment="Center">
                                                        <Image Source="/Agent.Interaction.Desktop;component/Images/popup.png" Width="18" Height="18"></Image>
                                                        <TextBlock HorizontalAlignment="Center" TextAlignment="Center" Text="MID Popup" FontFamily="Calibri" FontSize="11" TextWrapping="Wrap" Margin="2,0,2,0"/>
                                                    </StackPanel>
                                                </Button>
                                                <Button Grid.Column="1" Name="btnAddCallData" Focusable="False" Width="30" Height="30" Margin="0,4,5,0" Style="{StaticResource NormalImageButton}" Visibility="{Binding IsVoiceEnabledAddCallData}" VerticalAlignment="Top" HorizontalAlignment="Right" VerticalContentAlignment="Stretch" Click="btnAddCallData_Click">
                                                    <StackPanel Orientation="Vertical" HorizontalAlignment="Center">
                                                        <Image Source="/Agent.Interaction.Desktop;component/Images/Add.png" Width="18" Height="18"></Image>
                                                        <TextBlock HorizontalAlignment="Center" TextAlignment="Center"  Text="Add" FontFamily="Calibri" FontSize="11" TextWrapping="Wrap" Margin="2,0,2,0"/>
                                                    </StackPanel>
                                                    <Button.ToolTip>
                                                        <Border Background="White" BorderBrush="#ADAAAD" BorderThickness="0.5" Margin="-5">
                                                            <Grid>
                                                                <Grid.RowDefinitions>
                                                                    <RowDefinition Height="Auto"></RowDefinition>
                                                                    <RowDefinition Height="*"></RowDefinition>
                                                                </Grid.RowDefinitions>
                                                                <TextBlock  Text="Add" Grid.Row="0" Padding="10,5,10,0" FontWeight="Bold" FontFamily="Calibri" ></TextBlock>
                                                                <TextBlock Grid.Row="1" Padding="10,2,10,10" TextWrapping="WrapWithOverflow" FontFamily="Calibri" Width="Auto" MaxWidth="200" Text="Insert addition call data" />
                                                            </Grid>
                                                        </Border>
                                                    </Button.ToolTip>
                                                </Button>
                                                <Button Grid.Column="2" Name="btnOpenCallDataWin" Focusable="False" Margin="0,4,5,0" Style="{StaticResource NormalImageButton}" Visibility="{Binding IsVoicePopCaseData}" VerticalAlignment="Top" HorizontalAlignment="Right" VerticalContentAlignment="Stretch" Click="btnOpenCallDataWin_Click">
                                                    <StackPanel Orientation="Vertical" HorizontalAlignment="Center">
                                                        <Image Source="/Agent.Interaction.Desktop;component/Images/Voice/Call.AttachData.png" Width="18" Height="18"></Image>
                                                        <TextBlock HorizontalAlignment="Center" TextAlignment="Center"  Text="Float Case Data" FontFamily="Calibri" FontSize="11" TextWrapping="Wrap" Margin="2,0,2,0"/>
                                                    </StackPanel>
                                                    <Button.ToolTip>
                                                        <Border Background="White" BorderBrush="#ADAAAD" BorderThickness="0.5" Margin="-5">
                                                            <Grid>
                                                                <Grid.RowDefinitions>
                                                                    <RowDefinition Height="Auto"></RowDefinition>
                                                                    <RowDefinition Height="*"></RowDefinition>
                                                                </Grid.RowDefinitions>
                                                                <TextBlock  Text="CaseData Popup" Grid.Row="0" Padding="10,5,10,0" FontWeight="Bold" FontFamily="Calibri" ></TextBlock>
                                                                <TextBlock Grid.Row="1" Padding="10,2,10,10" TextWrapping="WrapWithOverflow" FontFamily="Calibri" Width="Auto" MaxWidth="200" Text="Open call data pop-up Window" />
                                                            </Grid>
                                                        </Border>
                                                    </Button.ToolTip>
                                                </Button>
                                            </Grid>
                                            <!--<StackPanel  Margin="5" Name="stkAttachData" Orientation="Vertical" Background="Green">-->
                                            <TextBlock Grid.Row="1" Name="txtAttachDataInfo" Margin="10" Text="No attach data found." FontFamily="Calibri" FontSize="12" 
                                                    VerticalAlignment="Stretch" HorizontalAlignment="Center" Width="Auto"/>
                                            <my:DataGrid Grid.Row="1" RowHeaderWidth="0" Background="White" SelectionUnit="Cell" SelectionMode="Single" HorizontalAlignment="Stretch" Name="DGAttachData" ItemsSource="{Binding NotifyCallDataView}" VerticalAlignment="Top" 
                                            HorizontalContentAlignment="Stretch" HorizontalGridLinesBrush="#D6D7D6" VerticalGridLinesBrush="#D6D7D6" ScrollViewer.VerticalScrollBarVisibility="Auto" AutoGenerateColumns="False" CanUserAddRows="False" CanUserDeleteRows="False" CanUserSortColumns="true"
                                            BeginningEdit="DGAttachData_BeginningEdit" PreparingCellForEdit="DGAttachData_PreparingCellForEdit" ClipboardCopyMode="None" RowEditEnding="DGAttachData_RowEditEnding" KeyUp="DGAttachData_KeyUp" >
                                                <!-- CopyingRowClipboardContent="DGAttachData_CopyingRowClipboardContent" ClipboardCopyMode="ExcludeHeader" <my:DataGrid.ContextMenu>
                                                    <ContextMenu>
                                                        <MenuItem Header="Copy" Name="Copy" InputGestureText="" Command="Copy" />
                                                    </ContextMenu>
                                                </my:DataGrid.ContextMenu>-->
                                                <my:DataGrid.Columns>
                                                    <my:DataGridTextColumn Header="Key" TextBlock.FontWeight="{Binding Fontweight}" FontFamily="{Binding Fontfamily}" Binding="{Binding Key}" ClipboardContentBinding="{x:Null}" Width="180" MinWidth="150" MaxWidth="200" ContextMenuService.ShowOnDisabled="True" IsReadOnly="True">
                                                        <my:DataGridTextColumn.ElementStyle>
                                                            <Style TargetType="TextBlock">
                                                                <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                                                                <Setter Property="Margin" Value="2" />
                                                                <Setter Property="Padding" Value="2" />
                                                            </Style>
                                                        </my:DataGridTextColumn.ElementStyle>
                                                    </my:DataGridTextColumn>
                                                    <my:DataGridTemplateColumn Header="Value" Width="10*" MinWidth="190" x:Name="cdValue" ClipboardContentBinding="{Binding Value, Converter={StaticResource UriUnescapeDataString}}">
                                                        <my:DataGridTemplateColumn.CellTemplate>
                                                            <DataTemplate>
                                                                <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap"  Margin="2"
                                                                           Padding="2" MinWidth="200" FontWeight="Normal" FontFamily="Calibri"  Cursor="{Binding Value, Converter={StaticResource CellMouseOver}}"
                                                                           Name="txtValue" Text="{Binding Value, Converter={StaticResource UriUnescapeDataString}}" Foreground="{Binding Value, Converter={StaticResource CellForeground}}" ContextMenuService.ShowOnDisabled="True">
                                                                    <TextBlock.ContextMenu>
                                                                        <ContextMenu>
                                                                            <MenuItem Header="Copy" Name="Copy" InputGestureText="" Click="DGCasedataValue_Copy_Click" />
                                                                        </ContextMenu>
                                                                    </TextBlock.ContextMenu>
                                                                </TextBlock>
                                                            </DataTemplate>
                                                        </my:DataGridTemplateColumn.CellTemplate>
                                                        <my:DataGridTemplateColumn.CellEditingTemplate>
                                                            <DataTemplate>
                                                                <Grid Name="editStack" Width="{Binding ElementName=cdValue, Path=Width}" HorizontalAlignment="Stretch" Margin="0,0,20,0">
                                                                    <Grid.ColumnDefinitions>
                                                                        <ColumnDefinition Width="*"></ColumnDefinition>
                                                                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                                                                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                                                                    </Grid.ColumnDefinitions>
                                                                    <TextBox Grid.Column="0" UndoLimit="10" HorizontalAlignment="Stretch"  Margin="2" Padding="2" TextWrapping="Wrap" Name="txtValue" Text="{Binding Value, Mode=TwoWay}" MinWidth="100" ContextMenu="{StaticResource DefaultCopyContextmenu}" />
                                                                    <Button Grid.Column="1"  Cursor="Hand" Margin="2,0,2,0"  HorizontalAlignment="Left" Name="btnUpdate" VerticalAlignment="Center" Width="Auto" Height="Auto" Click="btnUpdate_Click" Foreground="#007EDF" Background="Transparent">
                                                                        <StackPanel Orientation="Vertical" HorizontalAlignment="Center">
                                                                            <Image Source="/Agent.Interaction.Desktop;component/Images/Edit.png" Width="10" Height="10"></Image>
                                                                        </StackPanel>
                                                                        <Button.ToolTip>
                                                                            <Border Background="White" BorderBrush="#ADAAAD" BorderThickness="0.5" Margin="-5">
                                                                                <Grid>
                                                                                    <Grid.RowDefinitions>
                                                                                        <RowDefinition Height="Auto"></RowDefinition>
                                                                                        <RowDefinition Height="*"></RowDefinition>
                                                                                    </Grid.RowDefinitions>
                                                                                    <TextBlock Name="UpdateHeading" Text="Update" Grid.Row="0" Padding="10,5,10,0" FontWeight="Bold" FontFamily="Calibri" ></TextBlock>
                                                                                    <TextBlock Name="UpdateContent" Grid.Row="1" Padding="10,2,10,10" TextWrapping="WrapWithOverflow" FontFamily="Calibri" Width="Auto" MaxWidth="200" Text="Agent can update data." />
                                                                                </Grid>
                                                                            </Border>
                                                                        </Button.ToolTip>
                                                                    </Button>
                                                                    <Button Grid.Column="2" Cursor="Hand" Margin="2,0,2,0"  HorizontalAlignment="Left" Name="btnCancel" VerticalAlignment="Center" Width="Auto" Height="Auto" Click="btnClear_Click" Foreground="#007EDF" Background="Transparent">
                                                                        <StackPanel Orientation="Vertical" HorizontalAlignment="Center">
                                                                            <Image Source="/Agent.Interaction.Desktop;component/Images/cancel.png" Width="10" Height="10"></Image>
                                                                        </StackPanel>
                                                                        <Button.ToolTip>
                                                                            <Border Background="White" BorderBrush="#ADAAAD" BorderThickness="0.5" Margin="-5">
                                                                                <Grid>
                                                                                    <Grid.RowDefinitions>
                                                                                        <RowDefinition Height="Auto"></RowDefinition>
                                                                                        <RowDefinition Height="*"></RowDefinition>
                                                                                    </Grid.RowDefinitions>
                                                                                    <TextBlock Name="CancelHeading" Text="Cancel" Grid.Row="0" Padding="10,5,10,0" FontWeight="Bold" FontFamily="Calibri" ></TextBlock>
                                                                                    <TextBlock Name="CancelContent" Grid.Row="1" Padding="10,2,10,10" TextWrapping="WrapWithOverflow" FontFamily="Calibri" Width="Auto" MaxWidth="200" Text="Agent can cancel data." />
                                                                                </Grid>
                                                                            </Border>
                                                                        </Button.ToolTip>
                                                                    </Button>
                                                                </Grid>
                                                            </DataTemplate>
                                                        </my:DataGridTemplateColumn.CellEditingTemplate>
                                                        <my:DataGridTemplateColumn.CellStyle>
                                                            <Style TargetType="{x:Type my:DataGridCell}">
                                                                <Setter Property="BorderThickness" Value="0" />
                                                                <Style.Triggers>
                                                                    <Trigger Property="IsSelected" Value="True">
                                                                        <Setter Property="Background" Value="{StaticResource HighlightedBrush}" />
                                                                        <Setter Property="Foreground" Value="Black" />
                                                                        <Setter Property="FocusManager.FocusedElement" Value="{Binding ElementName=txtValue}"/>
                                                                    </Trigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </my:DataGridTemplateColumn.CellStyle>                                                        
                                                    </my:DataGridTemplateColumn>
                                                </my:DataGrid.Columns>
                                                <!--<my:DataGrid.RowStyle>
                                                    <Style TargetType="{x:Type my:DataGridRow}">
                                                        --><!--<EventSetter Event="MouseDoubleClick" Handler="DGAttachData_MouseDoubleClick " />--><!--
                                                        <Setter Property="BorderThickness" Value="0" />
                                                        <Style.Triggers>
                                                            <Trigger Property="IsSelected" Value="True">
                                                                <Setter Property="Background" Value="{StaticResource HighlightedBrush}" />
                                                                <Setter Property="Foreground" Value="Black" />
                                                            </Trigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </my:DataGrid.RowStyle>-->
                                            </my:DataGrid>
                                            <!--</StackPanel>-->
                                        </Grid>
                                    </TabItem>
                                    <TabItem Header="Disposition Code" Name="commonDispositionTab" Visibility="{Binding DispositionVisibility}">
                                        <!--<Border MinHeight="150" Margin="5" BorderThickness="0.5" BorderBrush="#656d90" VerticalAlignment="Stretch">-->
                                        <!--<StackPanel Name="stk_Dispositioncode" MinHeight="150" VerticalAlignment="Stretch" Orientation="Vertical" Margin="5">-->
                                        <Grid Name="dispositionGrid" Margin="5" SizeChanged="dispositionGrid_SizeChanged" HorizontalAlignment="Stretch"></Grid>
                                        <!--</StackPanel>-->
                                        <!--</Border>-->
                                    </TabItem>
                                    <TabItem Header="Contact" Name="voiceContact">
                                        <Grid Name="gridVoiceContact">

                                        </Grid>
                                    </TabItem>
                                    <!--<TabItem Header="Note" Visibility="Hidden">
                                </TabItem>-->
                                </TabControl>
                            </TabItem>

                            <TabItem Header="_Disposition Code" Name="DispositionTab" Visibility="{Binding DispositionOnlyVisibility}" VirtualizingStackPanel.IsVirtualizing="True"
              VirtualizingStackPanel.VirtualizationMode="Recycling">
                                <!--<Border MinHeight="150" Margin="5" BorderThickness="0.5" BorderBrush="#656d90" VerticalAlignment="Stretch">-->
                                <StackPanel Name="stk_Dispositioncodeonly" MinHeight="150" VerticalAlignment="Stretch" Orientation="Vertical" Margin="5" VirtualizingStackPanel.IsVirtualizing="True"
              VirtualizingStackPanel.VirtualizationMode="Recycling">
                                </StackPanel>
                                <!--</Border>-->
                            </TabItem>

                            <TabItem Name="popUpUrl" Header="_Popup Url" VirtualizingStackPanel.IsVirtualizing="True"
              VirtualizingStackPanel.VirtualizationMode="Recycling">
                                <Grid Name="gridPopupURL">
                                    <TabControl Name="tbSubTab"  HorizontalAlignment="Stretch" VerticalAlignment="Stretch"  VirtualizingStackPanel.IsVirtualizing="True"
              VirtualizingStackPanel.VirtualizationMode="Recycling" >
                                        <TabItem Name="firstTab" Header="First Tab" >
                                            <Grid Name="gridFirst" Background="Black">
                                                <WebBrowser Name="firstBrowser"  HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Navigating="firstBrowser_Navigating" LoadCompleted="firstBrowser_LoadCompleted"/>
                                            </Grid>
                                        </TabItem>
                                    </TabControl>
                                    <Image Name="imgLoading" Visibility="Collapsed" Panel.ZIndex="0" VerticalAlignment="Center" HorizontalAlignment="Center" gif:ImageBehavior.AnimatedSource="/Agent.Interaction.Desktop;component/Images/Loading.GIF" Width="80" Height="80" />
                                    <WebBrowser Name="webBrowser" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"  LoadCompleted="webBrowser_LoadCompleted"></WebBrowser>
                                </Grid>
                            </TabItem>

                        </TabControl>

                        <TabControl Visibility="{Binding MessageTabVisibility}" Height="Auto" Margin="5,5,5,0"
                                    TabStripPlacement="Bottom" Name="MessageTabControl" VirtualizingStackPanel.IsVirtualizing="True"
              VirtualizingStackPanel.VirtualizationMode="Recycling">
                            <TabItem Header="My Messa_ges">
                                <Grid>
                                    <my:DataGrid VerticalAlignment="Stretch" RowHeaderWidth="0" Margin="5" Background="White" HorizontalAlignment="Stretch" Name="DGMyMessages"
                     HorizontalContentAlignment="Left" HorizontalGridLinesBrush="#D6D7D6" VerticalGridLinesBrush="#D6D7D6" AutoGenerateColumns="False" CanUserAddRows="False"
                        CanUserDeleteRows="False" CanUserSortColumns="True" ItemsSource="{Binding MyMessages}" VirtualizingStackPanel.IsVirtualizing="True"
              VirtualizingStackPanel.VirtualizationMode="Recycling">
                                        <my:DataGrid.Columns>
                                            <my:DataGridTextColumn Visibility="Hidden" Binding="{Binding Index}" />
                                            <my:DataGridTemplateColumn Width="20" MinWidth="20" MaxWidth="20">
                                                <my:DataGridTemplateColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <Image Name="imgMessageIcon" Height="15" Width="15" Source="{Binding MessageIconImageSource}" />
                                                    </DataTemplate>
                                                </my:DataGridTemplateColumn.CellTemplate>
                                            </my:DataGridTemplateColumn>
                                            <my:DataGridTemplateColumn  Header="Type" CanUserSort="True" SortMemberPath="MessageType" Width="90" MinWidth="80">
                                                <my:DataGridTemplateColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <TextBlock HorizontalAlignment="Left" Name="txtMessageType"  VerticalAlignment="Center" Text="{Binding MessageType}" Margin="2,0,0,0" />
                                                    </DataTemplate>
                                                </my:DataGridTemplateColumn.CellTemplate>
                                            </my:DataGridTemplateColumn>
                                            <my:DataGridTemplateColumn Header="Sender" CanUserSort="True" SortMemberPath="MessageSender" Width="90" MinWidth="80">
                                                <my:DataGridTemplateColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <TextBlock HorizontalAlignment="Left" Name="txtMessageSender"  VerticalAlignment="Center" Text="{Binding MessageSender}" Margin="2,0,0,0" />
                                                    </DataTemplate>
                                                </my:DataGridTemplateColumn.CellTemplate>
                                            </my:DataGridTemplateColumn>
                                            <my:DataGridTemplateColumn Header="Subject" CanUserSort="True" SortMemberPath="MessageSubject" Width="150" MinWidth="120">
                                                <my:DataGridTemplateColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <TextBlock Margin="2,0,0,0" HorizontalAlignment="Left"  VerticalAlignment="Center" Name="txtSubject" Text="{Binding MessageSubject}" />
                                                    </DataTemplate>
                                                </my:DataGridTemplateColumn.CellTemplate>
                                            </my:DataGridTemplateColumn>
                                            <my:DataGridTemplateColumn Header="Priority" CanUserSort="True" SortMemberPath="MessagePriority" Width="90" MinWidth="80">
                                                <my:DataGridTemplateColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <TextBlock HorizontalAlignment="Left" Name="txtPriority"  VerticalAlignment="Center" Text="{Binding MessagePriority}" Foreground="{Binding MessagePriority, Converter={StaticResource ValueConverter}}">
                                                 <!--<TextBlock.Style>
                                                         <Style>
                                                             <Style.Triggers>
                                                                 <DataTrigger Binding="{Binding MessagePriority}">
                                                                    <Setter Property="TextElement.Foreground" Value="{Binding BroadCastForegroundBrush}" />
                                                                 </DataTrigger>
                                                             </Style.Triggers>
                                                         </Style>
                                                </TextBlock.Style>-->
                                                        </TextBlock>
                                                    </DataTemplate>
                                                </my:DataGridTemplateColumn.CellTemplate>
                                            </my:DataGridTemplateColumn>
                                            <my:DataGridTemplateColumn Header="Date" CanUserSort="True" SortMemberPath="MessageDate" Width="140" MinWidth="110">
                                                <my:DataGridTemplateColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <TextBlock HorizontalAlignment="Left"  VerticalAlignment="Center" Name="txtDate" Text="{Binding MessageDate}" />
                                                    </DataTemplate>
                                                </my:DataGridTemplateColumn.CellTemplate>
                                            </my:DataGridTemplateColumn>
                                            <my:DataGridTemplateColumn Header="Audience" CanUserSort="True" SortMemberPath="MessageAudience" Width="*" MinWidth="70">
                                                <my:DataGridTemplateColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <TextBlock HorizontalAlignment="Left" Name="txtAudience"  VerticalAlignment="Center" Text="{Binding MessageAudience}" />
                                                    </DataTemplate>
                                                </my:DataGridTemplateColumn.CellTemplate>
                                            </my:DataGridTemplateColumn>
                                        </my:DataGrid.Columns>
                                        <my:DataGrid.RowStyle>
                                            <Style TargetType="my:DataGridRow">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding ISread}" Value="False">
                                                        <Setter Property="FontWeight"  Value="DemiBold" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding ISread}" Value="True">
                                                        <Setter Property="FontWeight"  Value="Normal" />
                                                    </DataTrigger>
                                                    <Trigger Property="IsSelected" Value="True">
                                                        <Setter Property="Background" Value="{StaticResource HighlightedBrush}" />
                                                    </Trigger>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="ToolTip">
                                                            <Setter.Value>
                                                                <ToolTip HasDropShadow="False" Placement="MousePoint" StaysOpen="True" VerticalAlignment="Bottom" BorderBrush="{x:Null}" Background="{x:Null}">
                                                                    <Border BorderBrush="#ADAAAD" BorderThickness="1" Margin="2" Width="Auto" Height="Auto" Background="White">
                                                                        <Grid>
                                                                            <Grid.ColumnDefinitions>
                                                                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                                                                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                                                                            </Grid.ColumnDefinitions>
                                                                            <Grid.RowDefinitions>
                                                                                <RowDefinition Height="Auto"></RowDefinition>
                                                                                <!--<RowDefinition Height="Auto"></RowDefinition>
                                                                        <RowDefinition Height="Auto"></RowDefinition>
                                                                        <RowDefinition Height="Auto"></RowDefinition>-->
                                                                            </Grid.RowDefinitions>
                                                                            <TextBlock Name="lblSubject" Grid.Column="0" Grid.Row="0" HorizontalAlignment="Left" Margin="2" Text="Subject:"></TextBlock>
                                                                            <TextBlock Name="txtSubject" Grid.Column="1" Grid.Row="0" HorizontalAlignment="Left" Margin="2" Text="{Binding MessageSubject}" MaxWidth="350" TextWrapping="Wrap"></TextBlock>
                                                                            <!--<TextBlock Name="lblSender" Grid.Column="0" Grid.Row="1" HorizontalAlignment="Left" Margin="2" Text="Sender:"></TextBlock>
                                                                    <TextBlock Name="txtSender" Grid.Column="1" Grid.Row="1" HorizontalAlignment="Left" Margin="2" Text="{Binding MessageSender}"></TextBlock>
                                                                    <TextBlock Name="lblPriority" Grid.Column="0" Grid.Row="2" HorizontalAlignment="Left" Margin="2" Text="Priority:"></TextBlock>
                                                                    <TextBlock Name="txtPriority" Grid.Column="1" Grid.Row="2" HorizontalAlignment="Left" Margin="2" Text="{Binding MessagePriority}"></TextBlock>
                                                                    <TextBlock Name="lblAudience" Grid.Column="0" Grid.Row="3" HorizontalAlignment="Left" Margin="2" Text="Audience:"></TextBlock>
                                                                    <TextBlock Name="txtAudience" Grid.Column="1" Grid.Row="4" HorizontalAlignment="Left" Margin="2" Text="{Binding MessageAudience}"></TextBlock>-->
                                                                        </Grid>
                                                                    </Border>
                                                                </ToolTip>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Trigger>
                                                </Style.Triggers>
                                                <EventSetter Event="my:DataGridRow.MouseDoubleClick" Handler="DGMyMessages_MouseDoubleClick" />
                                            </Style>
                                        </my:DataGrid.RowStyle>
                                    </my:DataGrid>
                                    <TextBlock Name="txtNoBroadcastMessage"  HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,10"></TextBlock>
                                </Grid>

                            </TabItem>
                            <!--<TabItem Header="Dummy" Visibility="Hidden">
                        </TabItem>-->
                        </TabControl>

                        <TabControl Visibility="{Binding ContactTabVisibility}" Height="Auto" Margin="5,5,5,0"
                                    TabStripPlacement="Bottom" Name="ContactTabControl" VirtualizingStackPanel.IsVirtualizing="True"
              VirtualizingStackPanel.VirtualizationMode="Recycling">
                            <TabItem Header="Cont_act Directory">
                                <!--<ScrollViewer Name="DetailsSV" Grid.Row="4" VerticalScrollBarVisibility="Auto">
                                    -->
                                <!-- SizeChanged="GridSize_SizeChanged">-->
                                <!--
                                    <ScrollViewer.Resources>
                                        <Style TargetType="ScrollBar">
                                            <Setter Property="SnapsToDevicePixels" Value="True" />
                                            <Setter Property="OverridesDefaultStyle" Value="true" />
                                            <Style.Triggers>
                                                <Trigger Property="Orientation" Value="Vertical">
                                                    <Setter Property="Width" Value="18" />
                                                    <Setter Property="Height" Value="Auto" />
                                                    <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ScrollViewer.Resources>-->
                                <Grid Name="ContactTabGrid" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">

                                </Grid>
                                <!--</ScrollViewer>-->
                            </TabItem>
                            <!--<TabItem Header="Dummy" Visibility="Hidden">
                        </TabItem>-->
                        </TabControl>
                        <Button Name="btn_Hide" Panel.ZIndex="1000" VerticalAlignment="Top" HorizontalAlignment="Right" Click="btn_Hide_Click"
                            Style="{StaticResource NormalImageButton}" Width="18" Height="18" Margin="6">
                            <Image Source="/Agent.Interaction.Desktop;component/Images/Custom Close selected.png" Width="10" Height="10"/>
                            <Button.ToolTip>
                                <Border Background="White" BorderBrush="#ADAAAD" BorderThickness="0.5" Margin="-5">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"></RowDefinition>
                                            <RowDefinition Height="*"></RowDefinition>
                                        </Grid.RowDefinitions>
                                        <TextBlock Text="Hide" Grid.Row="0" Padding="10,5,10,0" FontWeight="Bold" FontFamily="Calibri" />
                                        <TextBlock Grid.Row="1" Text="Hide the workspace supporting views" Padding="10,2,10,10" TextWrapping="WrapWithOverflow" FontFamily="Calibri" Width="Auto" MaxWidth="200"/>
                                    </Grid>
                                </Border>

                            </Button.ToolTip>
                        </Button>
                    </Grid>
                </Grid>
            </Grid>
        </Border>

        <Popup Name="popupState" Placement="Bottom" StaysOpen="False" AllowsTransparency="True" VerticalAlignment="Bottom">
            <Border BorderBrush="#ADAAAD" BorderThickness="1" Margin="10" Width="Auto" Height="Auto" Background="White">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <!--<RowDefinition Height="Auto"></RowDefinition>-->
                        <RowDefinition Height="Auto"></RowDefinition>
                        <RowDefinition Height="Auto"></RowDefinition>
                        <RowDefinition Height="Auto"></RowDefinition>
                        <RowDefinition Height="Auto"></RowDefinition>
                        <RowDefinition Height="Auto"></RowDefinition>
                    </Grid.RowDefinitions>
                    <StackPanel Orientation="Horizontal" Grid.ColumnSpan="2" Grid.Row="0" HorizontalAlignment="Left" Margin="10,5,0,5">
                        <Image Name="img_agentStatus" Height="10" Width="10" Source="{Binding AgentStateImageSource}"></Image>
                        <TextBlock Name="lblagentName" FontWeight="Bold" FontSize="12" Text="{Binding AgentFullName}" Margin="5,0,0,0"></TextBlock>
                    </StackPanel>
                    <!--<StackPanel Orientation="Horizontal" Grid.ColumnSpan="2" Grid.Row="1" HorizontalAlignment="Left" Margin="40,3,5,0">
                        <TextBlock Name="lblagentStatus" Text="{Binding UserState}"></TextBlock>
                        <CustomControl:TimerLabel x:Name="popupChannelStateTime" Text="[00:00:00]" Margin="5,0,0,0" Visibility="{Binding IsStateTimer}"></CustomControl:TimerLabel>
                    </StackPanel>-->
                    <TextBlock Name="lblLoggedIN_time" Grid.ColumnSpan="2" Grid.Row="1" HorizontalAlignment="Left" Margin="40,3,0,0"></TextBlock>
                    <TextBlock Name="lblLoginID" Grid.ColumnSpan="2" Grid.Row="2" HorizontalAlignment="Left" Margin="40,3,0,0"></TextBlock>
                    <TextBlock Name="lblagentPlace" Grid.ColumnSpan="2" Grid.Row="3" HorizontalAlignment="Left" Margin="40,3,0,0" Text="{Binding UserPlace}"></TextBlock>
                    <my:DataGrid RowHeaderWidth="0" BorderBrush="Transparent" Margin="10,10,5,5" Background="White" HorizontalAlignment="Left" Name="DGMyChannel"
                    VerticalAlignment="Center" HorizontalContentAlignment="Left" HorizontalGridLinesBrush="Transparent"
                     VerticalGridLinesBrush="Transparent"  AutoGenerateColumns="False" CanUserAddRows="False"
                        CanUserDeleteRows="False" ItemsSource="{Binding MediaStatus}" Grid.ColumnSpan="2" Grid.Row="4" HeadersVisibility="None">
                        <my:DataGrid.Columns>
                            <my:DataGridTemplateColumn Header="Media" Width="Auto" MinWidth="70">
                                <my:DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal">
                                            <Image Name="imgChannelIcon" Height="15" Width="15" Source="{Binding ChannelIconImageSource}" />
                                            <TextBlock HorizontalAlignment="Left" Name="txtChannelName" Text="{Binding ChannelName}" Margin="2,0,0,0" />
                                        </StackPanel>
                                    </DataTemplate>
                                </my:DataGridTemplateColumn.CellTemplate>
                            </my:DataGridTemplateColumn>
                            <my:DataGridTemplateColumn Header="Status" Width="Auto" MinWidth="130">
                                <my:DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                                            </Grid.ColumnDefinitions>
                                            <Image Grid.Column="0" HorizontalAlignment="Left" Name="imgChannelStateIcon" Margin="5,0,5,0" Height="10" Width="10" Source="{Binding ChannelStateImageSource}" />
                                            <TextBlock Grid.Column="1" HorizontalAlignment="Left" Name="txtChannelState" Text="{Binding ChannelState}" Margin="2,0,0,0" />
                                            <CustomControl:TimerLabel Margin="5,0,5,0" Grid.Column="2" HorizontalAlignment="Right" Text="{Binding ChannelInitialTime}" Visibility="{Binding StateTimer}" />
                                            <TextBlock Margin="5,0,5,0" Grid.Column="2" HorizontalAlignment="Right" Text="[Pending]" VerticalAlignment="Center">
                                                <TextBlock.Style>
                                                    <Style TargetType="{x:Type TextBlock}">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Path=StateTimer}" Value="Collapsed">
                                                                <Setter Property="Visibility" Value="Visible"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding Path=StateTimer}" Value="Visible">
                                                                <Setter Property="Visibility" Value="Collapsed"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>
                                        </Grid>
                                    </DataTemplate>
                                </my:DataGridTemplateColumn.CellTemplate>
                                <my:DataGridTemplateColumn.CellStyle>
                                    <Style TargetType="{x:Type my:DataGridCell}">
                                        <EventSetter Event="MouseRightButtonDown" Handler="txtblock_MouseRightButtonDown" />
                                        <Setter Property="BorderThickness" Value="0" />
                                        <Style.Triggers>
                                            <Trigger Property="IsSelected" Value="True">
                                                <Setter Property="Background" Value="{StaticResource HighlightedBrush}" />
                                                <Setter Property="Foreground" Value="Black" />
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </my:DataGridTemplateColumn.CellStyle>
                            </my:DataGridTemplateColumn>
                        </my:DataGrid.Columns>
                        <my:DataGrid.RowStyle>
                            <Style TargetType="my:DataGridRow">
                                <Style.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="Background" Value="{StaticResource HighlightedBrush}" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </my:DataGrid.RowStyle>
                    </my:DataGrid>
                </Grid>
            </Border>
        </Popup>
    </Grid>
</Window>